<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:pro="http://www.liquibase.org/xml/ns/pro"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
                        http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.1.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <changeSet id="1" author="Maheshkumar">
        <sql>
            CREATE TYPE public.USER_ROLES AS ENUM ('BUSINESS', 'CUSTOMER');
        </sql>
        <sql>
            CREATE TABLE public.roles (
                id bigserial NOT NULL,
                role_name public.USER_ROLES NOT NULL,
                created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                updated_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT pk_roles PRIMARY KEY (id),
                CONSTRAINT roles_role_name_unqiue UNIQUE (role_name)
            );
        </sql>
        <sql>
            INSERT INTO public.roles (role_name)
            VALUES ('BUSINESS'), ('CUSTOMER');
        </sql>
    </changeSet>
    <changeSet id="2" author="Maheshkumar">
        <sql>
            CREATE TABLE public.users (
                id bigserial NOT NULL,
                role_id bigint NOT NULL,
                name varchar(75) NOT NULL,
                email varchar(100) NOT NULL,
                mobile_no varchar(20) NOT NULL,
                password_hash varchar(250) NOT NULL,
                created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                updated_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT pk_users PRIMARY KEY (id),
                CONSTRAINT fk_users_role_id FOREIGN KEY (role_id) REFERENCES public.roles(id),
                CONSTRAINT users_email_unique UNIQUE (email),
                CONSTRAINT users_mobile_no_unique UNIQUE (mobile_no)
            );
        </sql>
    </changeSet>
    <changeSet id="3" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN is_email_verified boolean NOT NULL DEFAULT false;
        </sql>
    </changeSet>
    <changeSet id="4" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN is_mobile_verified boolean NOT NULL DEFAULT false;
        </sql>
    </changeSet>
    <changeSet id="5" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN is_totp_enabled boolean NOT NULL DEFAULT false;
        </sql>
    </changeSet>
    <changeSet id="6" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN totp_identity varchar(100) NOT NULL DEFAULT '';
        </sql>
    </changeSet>
    <changeSet id="7" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN totp_secret varchar(200) NOT NULL DEFAULT '';
        </sql>
    </changeSet>
    <changeSet id="8" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            DROP COLUMN totp_secret;
        </sql>
    </changeSet>
    <changeSet id="9" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN totp_secret varchar(200) NOT NULL DEFAULT '';
        </sql>
    </changeSet>
    <changeSet id="10" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            DROP COLUMN totp_identity;
        </sql>
    </changeSet>
    <changeSet id="11" author="Maheshkumar">
        <sql>
            ALTER TABLE public.users
            ADD COLUMN last_password_reset_at timestamp NULL;
        </sql>
    </changeSet>
    <changeSet id="12" author="Maheshkumar">
        <sql>
            CREATE TABLE public.used_password_reset_tokens (
                id bigserial NOT NULL,
                token varchar(300) NOT NULL,
                created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT pk_used_password_reset_tokens PRIMARY KEY (id)
            );
        </sql>
    </changeSet>
</databaseChangeLog>